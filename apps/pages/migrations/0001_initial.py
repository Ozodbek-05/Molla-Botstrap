# Generated by Django 5.2.5 on 2025-08-29 06:55

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ContactModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=128)),
                ("email", models.EmailField(max_length=254)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("comment", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=120)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("birth_date", models.DateField()),
                ("year_of_study", models.PositiveSmallIntegerField()),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["full_name"],
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=20, unique=True)),
                ("title", models.CharField(max_length=160)),
                ("credits", models.PositiveSmallIntegerField()),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="courses",
                        to="pages.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=120)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("hire_date", models.DateField()),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="instructors",
                        to="pages.department",
                    ),
                ),
            ],
            options={
                "ordering": ["full_name"],
            },
        ),
        migrations.CreateModel(
            name="Prerequisite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prereqs_for",
                        to="pages.course",
                    ),
                ),
                (
                    "prerequisite",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="is_prereq_of",
                        to="pages.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("capacity", models.PositiveIntegerField(default=30)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sections",
                        to="pages.course",
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sections",
                        to="pages.instructor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("MID", "MID"), ("FIN", "FIN"), ("QUIZ", "QUIZ")],
                        max_length=10,
                    ),
                ),
                ("date", models.DateField()),
                ("max_score", models.PositiveIntegerField(default=100)),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exams",
                        to="pages.section",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField()),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="pages.exam",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exam_results",
                        to="pages.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enrolled_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A", "A"),
                            ("B", "B"),
                            ("C", "C"),
                            ("D", "D"),
                            ("F", "F"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="pages.section",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="pages.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Term",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.PositiveIntegerField()),
                (
                    "semester",
                    models.CharField(
                        choices=[
                            ("SPRING", "SPRING"),
                            ("FALL", "FALL"),
                            ("SUMMER", "SUMMER"),
                        ],
                        max_length=16,
                    ),
                ),
            ],
            options={
                "unique_together": {("year", "semester")},
            },
        ),
        migrations.AddField(
            model_name="section",
            name="term",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sections",
                to="pages.term",
            ),
        ),
        migrations.AddIndex(
            model_name="instructor",
            index=models.Index(
                fields=["department"], name="pages_instr_departm_67ae4d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="prerequisite",
            unique_together={("course", "prerequisite")},
        ),
        migrations.AlterUniqueTogether(
            name="exam",
            unique_together={("section", "kind")},
        ),
        migrations.AddIndex(
            model_name="examresult",
            index=models.Index(
                fields=["student"], name="pages_examr_student_1f5eca_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="examresult",
            unique_together={("exam", "student")},
        ),
        migrations.AddIndex(
            model_name="enrollment",
            index=models.Index(
                fields=["student", "section"], name="pages_enrol_student_7617a4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="enrollment",
            unique_together={("section", "student")},
        ),
        migrations.AddIndex(
            model_name="section",
            index=models.Index(fields=["term"], name="pages_secti_term_id_0bce00_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="section",
            unique_together={("course", "instructor", "term")},
        ),
    ]
